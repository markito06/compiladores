X+++ Compiler - Version 2.0 - 2017
Reading from file /home/marcos/Documentos/compiladores/Trabalho/Entrega1/exemplos/sucess_test.java . . .
package  <IDENT> 52
compilers  <IDENT> 52
;  <SEMICOLON> 61
class  <CLASS> 13
empty  <IDENT> 52
{  <LBRACE> 57
}  <RBRACE> 58
class  <CLASS> 13
types  <IDENT> 52
{  <LBRACE> 57
int  <INT> 23
int1  <IDENT> 52
=  <ASSIGN> 65
1  <int_constant> 45
;  <SEMICOLON> 61
int  <INT> 23
int2  <IDENT> 52
=  <ASSIGN> 65
-  <MINUS> 73
1  <int_constant> 45
;  <SEMICOLON> 61
int  <INT> 23
int3  <IDENT> 52
=  <ASSIGN> 65
0  <int_constant> 45
;  <SEMICOLON> 61
float  <IDENT> 52
float1  <IDENT> 52
=  <ASSIGN> 65
1  <int_constant> 45
.  <DOT> 63
;  <SEMICOLON> 61
float  <IDENT> 52
float2  <IDENT> 52
=  <ASSIGN> 65
.1  <float_constant> 46
;  <SEMICOLON> 61
float  <IDENT> 52
float3  <IDENT> 52
=  <ASSIGN> 65
1.1E-5  <float_constant> 46
;  <SEMICOLON> 61
float  <IDENT> 52
float4  <IDENT> 52
=  <ASSIGN> 65
1.1e-5  <float_constant> 46
;  <SEMICOLON> 61
boolean  <BOOLEAN> 26
b1  <IDENT> 52
=  <ASSIGN> 65
true  <boolean_constant> 48
;  <SEMICOLON> 61
boolean  <BOOLEAN> 26
b2  <IDENT> 52
=  <ASSIGN> 65
false  <boolean_constant> 48
;  <SEMICOLON> 61
char  <CHAR> 25
c1  <IDENT> 52
=  <ASSIGN> 65
'd'  <char_constant> 49
;  <SEMICOLON> 61
char  <CHAR> 25
c2  <IDENT> 52
=  <ASSIGN> 65
'D'  <char_constant> 49
;  <SEMICOLON> 61
string  <STRING> 24
constanteString  <IDENT> 52
=  <ASSIGN> 65
"equipe N - Guilherme e Marcos"  <string_constant> 47
;  <SEMICOLON> 61
string  <STRING> 24
nula  <IDENT> 52
=  <ASSIGN> 65
null  <null_constant> 50
;  <SEMICOLON> 61
short  <SHORT> 28
s1  <IDENT> 52
=  <ASSIGN> 65
1  <int_constant> 45
;  <SEMICOLON> 61
byte  <BYTE> 27
byte1  <IDENT> 52
=  <ASSIGN> 65
1  <int_constant> 45
;  <SEMICOLON> 61
byte  <BYTE> 27
byte2  <IDENT> 52
=  <ASSIGN> 65
0  <int_constant> 45
;  <SEMICOLON> 61
long  <LONG> 29
l1  <IDENT> 52
=  <ASSIGN> 65
11111111111111  <int_constant> 45
;  <SEMICOLON> 61
long  <LONG> 29
l2  <IDENT> 52
=  <ASSIGN> 65
-  <MINUS> 73
11111111111111  <int_constant> 45
;  <SEMICOLON> 61
}  <RBRACE> 58
class  <CLASS> 13
operadores  <IDENT> 52
extends  <EXTENDS> 16
types  <IDENT> 52
{  <LBRACE> 57
boolean  <BOOLEAN> 26
equals  <IDENT> 52
=  <ASSIGN> 65
(  <LPAREN> 55
1  <int_constant> 45
==  <EQ> 68
2  <int_constant> 45
)  <RPAREN> 56
;  <SEMICOLON> 61
boolean  <BOOLEAN> 26
greatOrEqual  <IDENT> 52
=  <ASSIGN> 65
(  <LPAREN> 55
1  <int_constant> 45
>=  <GE> 70
2  <int_constant> 45
)  <RPAREN> 56
;  <SEMICOLON> 61
boolean  <BOOLEAN> 26
loweOrEqual  <IDENT> 52
=  <ASSIGN> 65
(  <LPAREN> 55
1  <int_constant> 45
<=  <LE> 69
2  <int_constant> 45
)  <RPAREN> 56
;  <SEMICOLON> 61
boolean  <BOOLEAN> 26
great  <IDENT> 52
=  <ASSIGN> 65
(  <LPAREN> 55
1  <int_constant> 45
>  <GT> 66
2  <int_constant> 45
)  <RPAREN> 56
;  <SEMICOLON> 61
boolean  <BOOLEAN> 26
lower  <IDENT> 52
=  <ASSIGN> 65
(  <LPAREN> 55
1  <int_constant> 45
<  <LT> 67
2  <int_constant> 45
)  <RPAREN> 56
;  <SEMICOLON> 61
boolean  <BOOLEAN> 26
different  <IDENT> 52
=  <ASSIGN> 65
(  <LPAREN> 55
1  <int_constant> 45
!=  <NEQ> 71
2  <int_constant> 45
)  <RPAREN> 56
;  <SEMICOLON> 61
int  <INT> 23
sum  <IDENT> 52
=  <ASSIGN> 65
1  <int_constant> 45
+  <PLUS> 72
1  <int_constant> 45
;  <SEMICOLON> 61
int  <INT> 23
subtraction  <IDENT> 52
=  <ASSIGN> 65
1  <int_constant> 45
-  <MINUS> 73
1  <int_constant> 45
;  <SEMICOLON> 61
double  <DOUBLE> 34
division  <IDENT> 52
=  <ASSIGN> 65
2  <int_constant> 45
/  <SLASH> 75
1  <int_constant> 45
;  <SEMICOLON> 61
float  <IDENT> 52
division2  <IDENT> 52
=  <ASSIGN> 65
1  <int_constant> 45
/  <SLASH> 75
3  <int_constant> 45
;  <SEMICOLON> 61
int  <INT> 23
multiply  <IDENT> 52
=  <ASSIGN> 65
2  <int_constant> 45
*  <STAR> 74
2  <int_constant> 45
;  <SEMICOLON> 61
float  <IDENT> 52
modulus  <IDENT> 52
=  <ASSIGN> 65
2  <int_constant> 45
%  <REM> 76
2  <int_constant> 45
;  <SEMICOLON> 61
}  <RBRACE> 58
class  <CLASS> 13
modifiers  <IDENT> 52
{  <LBRACE> 57
final  <FINAL> 17
int  <INT> 23
;  <SEMICOLON> 61
public  <PUBLIC> 18
int  <INT> 23
;  <SEMICOLON> 61
private  <PRIVATE> 19
int  <INT> 23
;  <SEMICOLON> 61
protected  <PROTECTED> 20
int  <INT> 23
;  <SEMICOLON> 61
}  <RBRACE> 58
  <EOF> 0
Program successfully analyzed.
